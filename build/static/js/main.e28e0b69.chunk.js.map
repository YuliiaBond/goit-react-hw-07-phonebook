{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/Contacts/Contacts.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/actions.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/Contacts/Contacts.js","App.js","redux/reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Container","children","className","style","container","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","Form","onSubmit","dispatch","useDispatch","useState","setName","setNumber","handleChange","event","currentTarget","value","form","preventDefault","label","input","type","pattern","title","required","onChange","btn","typy","Filter","target","Contact","onDeleteContact","onClick","Contacts","contacts","useSelector","state","filter","item","normalizedFilter","toLowerCase","contact","includes","list","map","App","createReducer","search","find","el","alert","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e28e0b69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2yKLT\",\"input\":\"Filter_input__2Vra4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__3QK1K\",\"btn\":\"Contact_btn__1z7JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1iNKt\",\"item\":\"Contacts_item__2loOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1Vh5J\"};","import React from 'react';\r\nimport style from'./Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={style.container}>{children}</div>;\r\n\r\nexport default Container;","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const filterContact = createAction('contacts/changeFilte');","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {addContact} from '../../redux/actions'\r\nimport style from './Form.module.css'\r\n\r\nexport default function Form({ onSubmit }) {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n    const handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const hadleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!name || !number) {\r\n            return;\r\n        }\r\n\r\n        dispatch(addContact({ name, number }));\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n    \r\n        return (\r\n            <form className={style.form} onSubmit={hadleSubmit}>\r\n                <label className={style.label}>\r\n                Name\r\n                <input\r\n                    className={style.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    // id={nameInputId}\r\n                />\r\n                </label>\r\n\r\n                <label className={style.label}>\r\n                Number\r\n                <input\r\n                    className={style.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    // id={numberInpntId}\r\n                />\r\n                </label>\r\n\r\n                <button className={style.btn} typy=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n","import { useDispatch } from 'react-redux';\r\nimport { filterContact } from '../../redux/actions';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onChange = event => dispatch(filterContact(event.target.value));\r\n\r\n    return (\r\n        <label className={style.label}>\r\n            Find contacts by name\r\n            <input className={style.input} type=\"text\" onChange={onChange} />\r\n        </label>\r\n\r\n    )\r\n    \r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Contact.module.css';\r\n\r\nconst Contact = ({name, number, onDeleteContact}) => (  \r\n    <>\r\n        <p className={style.name}>\r\n            {name}: <span>{number}</span>\r\n        </p>\r\n        <button className={style.btn} onClick={onDeleteContact}>\r\n            Delete\r\n        </button>\r\n    </>\r\n);\r\n\r\nContact.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;","\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport Contact from '../Contact/Contact';\r\nimport style from './Contacts.module.css'\r\n\r\nconst Contacts = () => {\r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n    const getContactList = state => {\r\n        const { filter, item } = state.contacts;\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return item.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\r\n    \r\n    };\r\n    \r\n    const contacts = useSelector(getContactList);\r\n\r\n    return (\r\n        <ul className={style.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={style.item}>\r\n                <Contact\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={() => onDeleteContact(id)}\r\n                    />\r\n            </li>\r\n        ))}\r\n        \r\n    </ul>\r\n    )\r\n    \r\n};\r\n\r\nexport default Contacts;","import Container from './components/Container';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport Contacts from './components/Contacts';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n\n      <Form />\n\n      <h2>Contacts</h2>\n\n      <Filter />\n\n      <Contacts />\n        \n    </Container>\n  )\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {addContact, deleteContact, filterContact} from './actions';\r\n\r\nconst item = createReducer([], {\r\n    [addContact.type]: (state, { payload }) => {\r\n        const search = state.find(el => el.name.toLowerCase() === payload.name.toLowerCase(),\r\n        );\r\n        \r\n        if (search) {\r\n            alert(`${search.name} is already in contacts.`);\r\n            return;\r\n        }\r\n        return [...state, payload]\r\n    },\r\n    \r\n    [deleteContact.type]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [filterContact.type]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    item,\r\n    filter,\r\n});\r\n\r\n","import contactsReducer from './reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n    },\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__5q7WN\",\"label\":\"Form_label__2Sei3\",\"input\":\"Form_input__3aBit\",\"btn\":\"Form_btn__25Prl\"};"],"sourceRoot":""}